<?xml version="1.0"?>

<!--
Copyright (C) 2010 J. Elfring

Dieses Programm ist freie Software. Sie koennen es unter den Bedingungen der
GNU General Public License, wie von der Free Software Foundation veroeffentlicht,
weitergeben und/oder modifizieren, entweder gemaess Version 3 der Lizenz oder
(nach Ihrer Wahl) jeder spaeteren Version.

Die Veroeffentlichung dieses Programms erfolgt in der Hoffnung, dass es Ihnen von
Nutzen sein wird, aber OHNE IRGENDEINE GARANTIE, sogar ohne die implizite
Garantie der MARKTREIFE oder der VERWENDBARKEIT FUER EINEN BESTIMMTEN ZWECK.
Details finden Sie in der GNU General Public License.

Sie sollten ein Exemplar der GNU General Public License zusammen mit diesem
Programm erhalten haben. Falls nicht, siehe <http://www.gnu.org/licenses/>.
-->

<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:at="http://www.w3.org/2005/Atom" xmlns:gd="http://schemas.google.com/g/2005" version="1.0">
<xsl:output method="text" version="1.0" encoding="iso-8859-1" indent="no"/>

<!-- NewLine fuer die Ausgabe -->
<xsl:variable name="newLine"><xsl:text>
</xsl:text></xsl:variable>

  <xsl:template match="/">
    <xsl:text disable-output-escaping="yes">[Backup]</xsl:text>
    <xsl:value-of select="$newLine"/>
    <xsl:text disable-output-escaping="yes">Format = 1.04</xsl:text>
    <xsl:value-of select="$newLine"/>
    <xsl:text disable-output-escaping="yes"></xsl:text>
    <xsl:value-of select="$newLine"/>
    <!-- Eintraege selektieren die mindestens eine der interessanten Telefonnummern enthalten -->
    <xsl:apply-templates select="at:feed/at:entry[gd:phoneNumber/@rel='http://schemas.google.com/g/2005#mobile' or gd:phoneNumber/@rel='http://schemas.google.com/g/2005#home' or gd:phoneNumber/@rel='http://schemas.google.com/g/2005#work']"/>
  </xsl:template>

  <xsl:template match="at:feed/at:entry">
    <!-- Jeweils den ersten Eintrag pro @rel selektieren -->
    <xsl:apply-templates select="gd:phoneNumber[not(@rel=preceding-sibling::gd:phoneNumber/@rel)]"/>
  </xsl:template>

  <xsl:template match="gd:phoneNumber">
    <!-- Nummerntyp auswerten -->
    <xsl:variable name="ctype">
      <xsl:choose>
        <xsl:when test="@rel = 'http://schemas.google.com/g/2005#mobile'">M</xsl:when>
        <xsl:when test="@rel = 'http://schemas.google.com/g/2005#home'">H</xsl:when>
        <xsl:when test="@rel = 'http://schemas.google.com/g/2005#work'">W</xsl:when>
        <xsl:otherwise>SKIP</xsl:otherwise>
      </xsl:choose>
    </xsl:variable>
    <!-- Contactname -->
    <xsl:variable name="title"><xsl:value-of select="../at:title"/></xsl:variable>
    <xsl:variable name="nname"><xsl:value-of select="substring-after($title,' ')"/></xsl:variable>
    <xsl:variable name="vname"><xsl:value-of select="substring($title,1,1)"/></xsl:variable>
    <xsl:variable name="lname"><xsl:value-of select="concat($vname,' ',$nname)"/></xsl:variable>
	<!-- Max Laenge begrenzen und Typ hinzufuegen-->
    <xsl:variable name="cname"><xsl:value-of select="concat(substring($lname,1,28),' ',$ctype)"/></xsl:variable>
    <!-- laufende Nummer -->
    <xsl:variable name="lnum"><xsl:number format="1" level="any"/></xsl:variable>
    <!-- Telefonnummer (Alles ausser + und Ziffern entfernen)-->
    <xsl:variable name="cnumber">
	<xsl:value-of select = "translate(.,translate(.,'1234567890+',''),'')" />
    </xsl:variable>
    <!-- Ausgabe -->
    <xsl:if test="$ctype != 'SKIP'">
      <xsl:text disable-output-escaping="yes">[PhonePBK</xsl:text><xsl:value-of select="$lnum"/><xsl:text disable-output-escaping="yes">]</xsl:text>
      <xsl:value-of select="$newLine"/>
      <xsl:text disable-output-escaping="yes">Location = </xsl:text><xsl:value-of select="$lnum"/>
      <xsl:value-of select="$newLine"/>
      <xsl:text disable-output-escaping="yes">Entry00Type = NumberGeneral</xsl:text>
      <xsl:value-of select="$newLine"/>
      <xsl:text disable-output-escaping="yes">Entry00Text = "</xsl:text><xsl:value-of select="$cnumber"/><xsl:text disable-output-escaping="yes">"</xsl:text>
      <xsl:value-of select="$newLine"/>
      <xsl:text disable-output-escaping="yes">Entry01Type = Name</xsl:text>
      <xsl:value-of select="$newLine"/>
      <xsl:text disable-output-escaping="yes">Entry01Text = "</xsl:text><xsl:value-of select="$cname"/><xsl:text disable-output-escaping="yes">"</xsl:text>
      <xsl:value-of select="$newLine"/>
      <xsl:value-of select="$newLine"/>
    </xsl:if>
  </xsl:template>
</xsl:stylesheet>
